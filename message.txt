import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.JFrame;
import javax.swing.JPanel;
import java.awt.Graphics;
import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JLabel;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;

@SuppressWarnings("serial")
  public class Main extends JPanel implements KeyListener, MouseMotionListener{
    JPanel panel = new JPanel();
    JFrame frame = new JFrame();
   public Main() {
    addKeyListener(this);
    addMouseMotionListener(this);
    panel.addKeyListener(this);
    panel.addMouseMotionListener(this);
    frame.addKeyListener(this);
    frame.addMouseMotionListener(this);
}
    public static void main(String [] args){
        Main play = new Main();
        play.setPanel();
    }
    public void setPanel(){
        panel.setLayout(null);
        frame.add(panel);
        frame.setLayout(null);
        panel.setBounds(0,0,100,100);
        frame.setVisible(true);
        panel.setVisible(true);
        panel.setFocusable(true);
        frame.setSize(100,100);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }
    public void keyTyped(KeyEvent evt){
        System.out.println("keytyped");
    }
    public void keyPressed(KeyEvent evt){
        System.out.print("keypressed");
    }
    public void keyReleased(KeyEvent evt){
        System.out.println("keyreleased");
    }

    public void mouseMoved(MouseEvent evt){
      System.out.println("bruh");
    }
    public void mouseDragged(MouseEvent evt){
      
    }
}

public class Main extends JPanel {
  private BufferedImage Background;
  private BufferedImage Determination;
  private BufferedImage imagechange;
  private BufferedImage Bravery;
  private BufferedImage Justice;
  private BufferedImage Kindness;
  private BufferedImage Patience;
  private BufferedImage Integrity;
  private BufferedImage Perserverance;
  private BufferedImage Cheater;
  int xmouse =0;
  String cheatcode = "";
  int ymouse =0;
  int skillissue = 0;
  int soul = 1;
  public Main() {
    KeyListener listener = new MyKeyListener();
    addKeyListener(listener);
    setFocusable(true);
    try {          
      Background = ImageIO.read(new File("Background.jpg"));
      Determination = ImageIO.read(new File("Determinationtext.png"));
      Bravery = ImageIO.read(new File("Braverytext.png"));
      Justice = ImageIO.read(new File("Justicetext.png"));
      Kindness = ImageIO.read(new File("Kindnesstext.png"));
      Patience = ImageIO.read(new File("Patiencetext.png"));
      Integrity = ImageIO.read(new File("Integritytext.png"));
      Perserverance = ImageIO.read(new File("Perserverancetext.png"));
      Cheater = ImageIO.read(new File("Cheatertext.png"));
      imagechange = Determination;

    } catch (IOException ex) {
        // handle exception...
      }
  }
  public void paint(Graphics g){
    super.paint(g);//you should always call the super-method first
    g.drawImage(Background,0,0,this);
    g.drawImage(imagechange,605,2,this);
    g.fillRect(xmouse,ymouse,5,10);
  }
  public static void main(String[] args) {
    Main keyboardExample = new Main();
    frame.add(keyboardExample);
    frame.setSize(900, 600);
    frame.setVisible(true);
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  }
 
  public class MyKeyListener implements KeyListener{
    @Override
    public void keyTyped(KeyEvent e) {
    }
 
    @Override
    public void keyPressed(KeyEvent e) {
      if(skillissue!=1){
        if(e.getKeyCode() == KeyEvent.VK_1){
          soul = 1;
          imagechange = Determination;
        }
        if(e.getKeyCode() == KeyEvent.VK_2){
          imagechange = Bravery;
          soul = 2;
        }
        if(e.getKeyCode() == KeyEvent.VK_3){
          imagechange = Justice;
          soul = 3;
        }
        if(e.getKeyCode() == KeyEvent.VK_4){
          imagechange = Kindness;
          soul = 4;
        }
        if(e.getKeyCode() == KeyEvent.VK_5){
          imagechange = Patience;
          soul = 5;
        }
        if(e.getKeyCode() == KeyEvent.VK_6){
          imagechange = Integrity;
          soul = 6;
        }
        if(e.getKeyCode() == KeyEvent.VK_7){
          imagechange = Perserverance;
          soul = 7;
        }
      }
        if(!cheatcode.equals("BIGSKILLISSUE")){ 
          if(e.getKeyCode() ==KeyEvent.VK_B){
          cheatcode="";
          } cheatcode=cheatcode+KeyEvent.getKeyText(e.getKeyCode());
        System.out.println(cheatcode);
        }
        if(cheatcode.equals("BIGSKILLISSUE")){
        skillissue=1;
        imagechange = Cheater;
        soul = 8;
        }
    }
    @Override
    public void keyReleased(KeyEvent e) {
   repaint(); System.out.println("keyReleased="+KeyEvent.getKeyText(e.getKeyCode()));
     System.out.println(xmouse); 
          System.out.println(xmouse); System.out.println("keyReleased="+KeyEvent.getKeyText(e.getKeyCode()));

    }
  } 
}
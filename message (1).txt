import java.awt.*;
import javax.swing.*;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.JFrame;
import javax.swing.JPanel;
import java.awt.Graphics;
import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JLabel;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.Toolkit;

@SuppressWarnings("serial")
public class Main extends JPanel{
  private BufferedImage Background, Determination, Bravery, Justice, Kindness, Patience, Integrity, Perserverance, Cheater, Imagechange;
  public static int mouseY, mouseX, skillissue =0;
  public static String cheatcode = "";
  public static int soul = 0;
  private void game_play(){
    try {     
      Background = ImageIO.read(new File("Background.jpg"));
      Determination = ImageIO.read(new File("Determinationtext.png"));
      Bravery = ImageIO.read(new File("Braverytext.png"));
      Justice = ImageIO.read(new File("Justicetext.png"));
      Kindness = ImageIO.read(new File("Kindnesstext.png"));
      Patience = ImageIO.read(new File("Patiencetext.png"));
      Integrity = ImageIO.read(new File("Integritytext.png"));
      Perserverance = ImageIO.read(new File("Perserverancetext.png"));
      Cheater = ImageIO.read(new File("Cheatertext.png"));
      if (soul == 0){
      Imagechange = Determination;
      }
    } catch (IOException ex) {
    }
  }
  private void custom_cursor(){
    Toolkit toolkit = Toolkit.getDefaultToolkit();
    Image img = toolkit.getImage("CheaterSoul.png");
    Image Determination = toolkit.getImage("DeterminationSoul.png");
    Image Bravery = toolkit.getImage("BraverySoul.png");
    Image Justice = toolkit.getImage("JusticeSoul.png");
    Image Kindness = toolkit.getImage("KindnessSoul.png");
    Image Patience = toolkit.getImage("PatienceSoul.png");
    Image Integrity = toolkit.getImage("IntegritySoul.png");
    Image Perserverance = toolkit.getImage("PerserveranceSoul.png");
    Image Cheater = toolkit.getImage("CheaterSoul.png");
    Point point = new Point (11,11);
    if(soul == 1){
      img = Determination;
    }
    if(soul == 2){
      img = Bravery;
    }
    if(soul == 3){
      img = Justice;
    }
    if(soul == 4){
      img = Kindness;
    }
    if(soul == 5){
      img = Patience;
    }
    if(soul == 6){
      img = Integrity;
    }
    if(soul == 7){
      img = Perserverance;
    }
    if(soul == 8){
      img = Cheater;
    }
    Cursor cursor = toolkit.createCustomCursor(img, point, "Cursor");
    setCursor(cursor);
  }
  public Main() {
    KeyListener listener = new MyKeyListener();
    addKeyListener(listener);
    setFocusable(true);
  }
  public void button(){
JButton b = new JButton("wawa");
b.setBounds(0,0,400,100);
b.setBorder(BorderFactory.createEmptyBorder());
b.setContentAreaFilled(true);
b.addMouseListener(new CustomMouseListener());
b.addActionListener(new MyActionListener());
add(b);
}
  public void paintComponent(Graphics g){
    super.paintComponent(g);//you should always call the super-method first
    g.drawImage(Background, 0, 0, this);
    g.drawImage(Imagechange, 794, 100, this);
  }
public void panel()throws InterruptedException{
Main hamood = new Main();
panel1.setPreferredSize(new Dimension(1200, 800));
add(panel1);
panel1.add(hamood);
panel1.setVisible(true);
hamood.game_play();
hamood.repaint();
hamood.button();
}
  public static void main(String[] args) throws InterruptedException {
    JFrame frame = new JFrame("Half-Lite");
    Main keyboardExample = new Main();
    frame.add(keyboardExample);
    frame.setSize(1200, 800);
    frame.setVisible(true);
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    keyboardExample.panel();
    while (true) {
    keyboardExample.custom_cursor();
            Thread.sleep(10);
        }
      // This is code for timer bozo Thread.sleep(10);
  }

  public class MyKeyListener implements KeyListener{
    @Override
    public void keyTyped(KeyEvent e) {
    }
    @Override
    public void keyPressed(KeyEvent e) {
      if(skillissue!=1){
        if(e.getKeyCode() == KeyEvent.VK_1){
          soul = 1;
          Imagechange = Determination;
        }
        if(e.getKeyCode() == KeyEvent.VK_2){
          Imagechange = Bravery;
          soul = 2;
          System.out.println("test");
        }
        if(e.getKeyCode() == KeyEvent.VK_3){
          Imagechange = Justice;
          soul = 3;
        }
        if(e.getKeyCode() == KeyEvent.VK_4){
          Imagechange = Kindness;
          soul = 4;
        }
        if(e.getKeyCode() == KeyEvent.VK_5){
          Imagechange = Patience;
          soul = 5;
        }
        if(e.getKeyCode() == KeyEvent.VK_6){
          Imagechange = Integrity;
          soul = 6;
        }
        if(e.getKeyCode() == KeyEvent.VK_7){
          System.out.println("wawa");
          Imagechange = Perserverance;
          soul = 7;
        }
      }
        if(!cheatcode.equals("BIGSKILLISSUE")){ 
          if(e.getKeyCode() ==KeyEvent.VK_B){
          cheatcode="";
          } cheatcode=cheatcode+KeyEvent.getKeyText(e.getKeyCode());
        System.out.println(cheatcode);
        }
        if(cheatcode.equals("BIGSKILLISSUE")){
        skillissue=1;
        Imagechange = Cheater;
        soul = 8;
        }
      repaint();
    }
    @Override
    public void keyReleased(KeyEvent e) { 
      System.out.println("wawa");
    }
  }
}